kind: Deployment
apiVersion: apps/v1
metadata:
  name: bookflashsales-v1
  namespace: easyabp
  labels:
    app: bookflashsales
    version: v1
  annotations:
    deployment.kubernetes.io/revision: '48'
    kubesphere.io/creator: admin
    kubesphere.io/relatedHPA: bookflashsales-v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: bookflashsales
      version: v1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: bookflashsales
        build_number: '10006'
        version: v1
      annotations:
        dapr.io/app-id: bookflashsales
        dapr.io/app-port: '80'
        dapr.io/enabled: 'true'
        kubesphere.io/restartedAt: '2022-08-06T16:53:55.585Z'
        logging.kubesphere.io/logsidecar-config: '{}'
    spec:
      volumes:
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ''
        - name: volume-3d22tg
          configMap:
            name: appsettings-configmap
            defaultMode: 420
        - name: tmp
          emptyDir: {}
      containers:
        - name: container-827j4m
          image: easyabpregistry.azurecr.io/bookflashsales:latest
          ports:
            - name: tcp-443
              containerPort: 443
              protocol: TCP
            - name: tcp-80
              containerPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: '2'
              memory: 6144Mi
            requests:
              cpu: '1'
              memory: 256Mi
          volumeMounts:
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
            - name: volume-3d22tg
              readOnly: true
              mountPath: /app/appsettings.json
              subPath: appsettings.json
            - name: tmp
              mountPath: /tmp
          livenessProbe:
            httpGet:
              path: /ping
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /ping
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
        - name: sidecar
          image: mcr.microsoft.com/dotnet/monitor
          args:
            - '--no-auth'
          ports:
            - containerPort: 52323
              protocol: TCP
          env:
            - name: DOTNETMONITOR_Urls
              value: 'http://+:52323'
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 32Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
